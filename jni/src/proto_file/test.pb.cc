// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_test_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DetectResult_FaceResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DetectResult_ImgProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponse_Image;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponse_Group;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponse_Person;
}  // namespace protobuf_test_2eproto
namespace MideaPb {
class FaceListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceList>
      _instance;
} _FaceList_default_instance_;
class QueryResponse_ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponse_Image>
      _instance;
} _QueryResponse_Image_default_instance_;
class QueryResponse_PersonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponse_Person>
      _instance;
} _QueryResponse_Person_default_instance_;
class QueryResponse_GroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponse_Group>
      _instance;
} _QueryResponse_Group_default_instance_;
class QueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponse>
      _instance;
} _QueryResponse_default_instance_;
class DetectResult_ImgPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectResult_ImgProperty>
      _instance;
} _DetectResult_ImgProperty_default_instance_;
class DetectResult_FaceResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectResult_FaceResult>
      _instance;
} _DetectResult_FaceResult_default_instance_;
class DetectResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectResult>
      _instance;
} _DetectResult_default_instance_;
}  // namespace MideaPb
namespace protobuf_test_2eproto {
static void InitDefaultsFaceList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MideaPb::_FaceList_default_instance_;
    new (ptr) ::MideaPb::FaceList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MideaPb::FaceList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FaceList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFaceList}, {}};

static void InitDefaultsQueryResponse_Image() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MideaPb::_QueryResponse_Image_default_instance_;
    new (ptr) ::MideaPb::QueryResponse_Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MideaPb::QueryResponse_Image::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponse_Image =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryResponse_Image}, {}};

static void InitDefaultsQueryResponse_Person() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MideaPb::_QueryResponse_Person_default_instance_;
    new (ptr) ::MideaPb::QueryResponse_Person();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MideaPb::QueryResponse_Person::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponse_Person =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryResponse_Person}, {
      &protobuf_test_2eproto::scc_info_QueryResponse_Image.base,}};

static void InitDefaultsQueryResponse_Group() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MideaPb::_QueryResponse_Group_default_instance_;
    new (ptr) ::MideaPb::QueryResponse_Group();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MideaPb::QueryResponse_Group::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponse_Group =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryResponse_Group}, {
      &protobuf_test_2eproto::scc_info_QueryResponse_Person.base,}};

static void InitDefaultsQueryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MideaPb::_QueryResponse_default_instance_;
    new (ptr) ::MideaPb::QueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MideaPb::QueryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryResponse}, {
      &protobuf_test_2eproto::scc_info_QueryResponse_Group.base,}};

static void InitDefaultsDetectResult_ImgProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MideaPb::_DetectResult_ImgProperty_default_instance_;
    new (ptr) ::MideaPb::DetectResult_ImgProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MideaPb::DetectResult_ImgProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DetectResult_ImgProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDetectResult_ImgProperty}, {}};

static void InitDefaultsDetectResult_FaceResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MideaPb::_DetectResult_FaceResult_default_instance_;
    new (ptr) ::MideaPb::DetectResult_FaceResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MideaPb::DetectResult_FaceResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DetectResult_FaceResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDetectResult_FaceResult}, {}};

static void InitDefaultsDetectResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MideaPb::_DetectResult_default_instance_;
    new (ptr) ::MideaPb::DetectResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MideaPb::DetectResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DetectResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDetectResult}, {
      &protobuf_test_2eproto::scc_info_DetectResult_ImgProperty.base,
      &protobuf_test_2eproto::scc_info_DetectResult_FaceResult.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FaceList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponse_Image.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponse_Person.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponse_Group.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DetectResult_ImgProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DetectResult_FaceResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DetectResult.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::FaceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::FaceList, face_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse_Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse_Image, image_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse_Person, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse_Person, person_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse_Person, image_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse_Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse_Group, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse_Group, person_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse, act_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::QueryResponse, list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_ImgProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_ImgProperty, luminance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_FaceResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_FaceResult, person_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_FaceResult, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_FaceResult, top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_FaceResult, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_FaceResult, bottom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_FaceResult, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_FaceResult, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult_FaceResult, liveness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult, img_property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MideaPb::DetectResult, face_result_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MideaPb::FaceList)},
  { 6, -1, sizeof(::MideaPb::QueryResponse_Image)},
  { 12, -1, sizeof(::MideaPb::QueryResponse_Person)},
  { 19, -1, sizeof(::MideaPb::QueryResponse_Group)},
  { 26, -1, sizeof(::MideaPb::QueryResponse)},
  { 33, -1, sizeof(::MideaPb::DetectResult_ImgProperty)},
  { 39, -1, sizeof(::MideaPb::DetectResult_FaceResult)},
  { 52, -1, sizeof(::MideaPb::DetectResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::MideaPb::_FaceList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MideaPb::_QueryResponse_Image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MideaPb::_QueryResponse_Person_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MideaPb::_QueryResponse_Group_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MideaPb::_QueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MideaPb::_DetectResult_ImgProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MideaPb::_DetectResult_FaceResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MideaPb::_DetectResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "test.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ntest.proto\022\007MideaPb\"\035\n\010FaceList\022\021\n\tfac"
      "e_list\030\001 \003(\005\"\207\002\n\rQueryResponse\022\013\n\003act\030\001 "
      "\001(\t\022*\n\004list\030\002 \003(\0132\034.MideaPb.QueryRespons"
      "e.Group\032\033\n\005Image\022\022\n\nimage_name\030\001 \001(\t\032O\n\006"
      "Person\022\023\n\013person_name\030\001 \001(\t\0220\n\nimage_lis"
      "t\030\002 \003(\0132\034.MideaPb.QueryResponse.Image\032O\n"
      "\005Group\022\022\n\ngroup_name\030\001 \001(\t\0222\n\013person_lis"
      "t\030\002 \003(\0132\035.MideaPb.QueryResponse.Person\"\260"
      "\002\n\014DetectResult\0227\n\014img_property\030\001 \001(\0132!."
      "MideaPb.DetectResult.ImgProperty\0225\n\013face"
      "_result\030\002 \003(\0132 .MideaPb.DetectResult.Fac"
      "eResult\032 \n\013ImgProperty\022\021\n\tluminance\030\001 \001("
      "\001\032\215\001\n\nFaceResult\022\021\n\tperson_id\030\001 \001(\005\022\014\n\004l"
      "eft\030\002 \001(\005\022\013\n\003top\030\003 \001(\005\022\r\n\005right\030\004 \001(\005\022\016\n"
      "\006bottom\030\005 \001(\005\022\014\n\004type\030\006 \001(\005\022\022\n\nconfidenc"
      "e\030\007 \001(\001\022\020\n\010liveness\030\010 \001(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 633);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_test_2eproto
namespace MideaPb {

// ===================================================================

void FaceList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceList::kFaceListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceList::FaceList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_FaceList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MideaPb.FaceList)
}
FaceList::FaceList(const FaceList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      face_list_(from.face_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MideaPb.FaceList)
}

void FaceList::SharedCtor() {
}

FaceList::~FaceList() {
  // @@protoc_insertion_point(destructor:MideaPb.FaceList)
  SharedDtor();
}

void FaceList::SharedDtor() {
}

void FaceList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FaceList::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceList& FaceList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_FaceList.base);
  return *internal_default_instance();
}


void FaceList::Clear() {
// @@protoc_insertion_point(message_clear_start:MideaPb.FaceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  face_list_.Clear();
  _internal_metadata_.Clear();
}

bool FaceList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MideaPb.FaceList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 face_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_face_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_face_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MideaPb.FaceList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MideaPb.FaceList)
  return false;
#undef DO_
}

void FaceList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MideaPb.FaceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 face_list = 1;
  if (this->face_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _face_list_cached_byte_size_));
  }
  for (int i = 0, n = this->face_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->face_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MideaPb.FaceList)
}

::google::protobuf::uint8* FaceList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MideaPb.FaceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 face_list = 1;
  if (this->face_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _face_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->face_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MideaPb.FaceList)
  return target;
}

size_t FaceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MideaPb.FaceList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 face_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->face_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _face_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaceList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MideaPb.FaceList)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MideaPb.FaceList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MideaPb.FaceList)
    MergeFrom(*source);
  }
}

void FaceList::MergeFrom(const FaceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MideaPb.FaceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  face_list_.MergeFrom(from.face_list_);
}

void FaceList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MideaPb.FaceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceList::CopyFrom(const FaceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MideaPb.FaceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceList::IsInitialized() const {
  return true;
}

void FaceList::Swap(FaceList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceList::InternalSwap(FaceList* other) {
  using std::swap;
  face_list_.InternalSwap(&other->face_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FaceList::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponse_Image::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponse_Image::kImageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponse_Image::QueryResponse_Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_QueryResponse_Image.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MideaPb.QueryResponse.Image)
}
QueryResponse_Image::QueryResponse_Image(const QueryResponse_Image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_name().size() > 0) {
    image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name_);
  }
  // @@protoc_insertion_point(copy_constructor:MideaPb.QueryResponse.Image)
}

void QueryResponse_Image::SharedCtor() {
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

QueryResponse_Image::~QueryResponse_Image() {
  // @@protoc_insertion_point(destructor:MideaPb.QueryResponse.Image)
  SharedDtor();
}

void QueryResponse_Image::SharedDtor() {
  image_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryResponse_Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponse_Image::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponse_Image& QueryResponse_Image::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_QueryResponse_Image.base);
  return *internal_default_instance();
}


void QueryResponse_Image::Clear() {
// @@protoc_insertion_point(message_clear_start:MideaPb.QueryResponse.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QueryResponse_Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MideaPb.QueryResponse.Image)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_name().data(), static_cast<int>(this->image_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MideaPb.QueryResponse.Image.image_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MideaPb.QueryResponse.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MideaPb.QueryResponse.Image)
  return false;
#undef DO_
}

void QueryResponse_Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MideaPb.QueryResponse.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MideaPb.QueryResponse.Image.image_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MideaPb.QueryResponse.Image)
}

::google::protobuf::uint8* QueryResponse_Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MideaPb.QueryResponse.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MideaPb.QueryResponse.Image.image_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MideaPb.QueryResponse.Image)
  return target;
}

size_t QueryResponse_Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MideaPb.QueryResponse.Image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string image_name = 1;
  if (this->image_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponse_Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MideaPb.QueryResponse.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponse_Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponse_Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MideaPb.QueryResponse.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MideaPb.QueryResponse.Image)
    MergeFrom(*source);
  }
}

void QueryResponse_Image::MergeFrom(const QueryResponse_Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MideaPb.QueryResponse.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_name().size() > 0) {

    image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name_);
  }
}

void QueryResponse_Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MideaPb.QueryResponse.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponse_Image::CopyFrom(const QueryResponse_Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MideaPb.QueryResponse.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponse_Image::IsInitialized() const {
  return true;
}

void QueryResponse_Image::Swap(QueryResponse_Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponse_Image::InternalSwap(QueryResponse_Image* other) {
  using std::swap;
  image_name_.Swap(&other->image_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponse_Image::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponse_Person::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponse_Person::kPersonNameFieldNumber;
const int QueryResponse_Person::kImageListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponse_Person::QueryResponse_Person()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_QueryResponse_Person.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MideaPb.QueryResponse.Person)
}
QueryResponse_Person::QueryResponse_Person(const QueryResponse_Person& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      image_list_(from.image_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  person_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.person_name().size() > 0) {
    person_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.person_name_);
  }
  // @@protoc_insertion_point(copy_constructor:MideaPb.QueryResponse.Person)
}

void QueryResponse_Person::SharedCtor() {
  person_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

QueryResponse_Person::~QueryResponse_Person() {
  // @@protoc_insertion_point(destructor:MideaPb.QueryResponse.Person)
  SharedDtor();
}

void QueryResponse_Person::SharedDtor() {
  person_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryResponse_Person::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponse_Person::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponse_Person& QueryResponse_Person::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_QueryResponse_Person.base);
  return *internal_default_instance();
}


void QueryResponse_Person::Clear() {
// @@protoc_insertion_point(message_clear_start:MideaPb.QueryResponse.Person)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_list_.Clear();
  person_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QueryResponse_Person::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MideaPb.QueryResponse.Person)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string person_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_person_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->person_name().data(), static_cast<int>(this->person_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MideaPb.QueryResponse.Person.person_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MideaPb.QueryResponse.Image image_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_image_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MideaPb.QueryResponse.Person)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MideaPb.QueryResponse.Person)
  return false;
#undef DO_
}

void QueryResponse_Person::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MideaPb.QueryResponse.Person)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string person_name = 1;
  if (this->person_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->person_name().data(), static_cast<int>(this->person_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MideaPb.QueryResponse.Person.person_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->person_name(), output);
  }

  // repeated .MideaPb.QueryResponse.Image image_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->image_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MideaPb.QueryResponse.Person)
}

::google::protobuf::uint8* QueryResponse_Person::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MideaPb.QueryResponse.Person)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string person_name = 1;
  if (this->person_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->person_name().data(), static_cast<int>(this->person_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MideaPb.QueryResponse.Person.person_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->person_name(), target);
  }

  // repeated .MideaPb.QueryResponse.Image image_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->image_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MideaPb.QueryResponse.Person)
  return target;
}

size_t QueryResponse_Person::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MideaPb.QueryResponse.Person)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .MideaPb.QueryResponse.Image image_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->image_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->image_list(static_cast<int>(i)));
    }
  }

  // string person_name = 1;
  if (this->person_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->person_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponse_Person::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MideaPb.QueryResponse.Person)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponse_Person* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponse_Person>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MideaPb.QueryResponse.Person)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MideaPb.QueryResponse.Person)
    MergeFrom(*source);
  }
}

void QueryResponse_Person::MergeFrom(const QueryResponse_Person& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MideaPb.QueryResponse.Person)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  image_list_.MergeFrom(from.image_list_);
  if (from.person_name().size() > 0) {

    person_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.person_name_);
  }
}

void QueryResponse_Person::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MideaPb.QueryResponse.Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponse_Person::CopyFrom(const QueryResponse_Person& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MideaPb.QueryResponse.Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponse_Person::IsInitialized() const {
  return true;
}

void QueryResponse_Person::Swap(QueryResponse_Person* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponse_Person::InternalSwap(QueryResponse_Person* other) {
  using std::swap;
  CastToBase(&image_list_)->InternalSwap(CastToBase(&other->image_list_));
  person_name_.Swap(&other->person_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponse_Person::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponse_Group::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponse_Group::kGroupNameFieldNumber;
const int QueryResponse_Group::kPersonListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponse_Group::QueryResponse_Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_QueryResponse_Group.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MideaPb.QueryResponse.Group)
}
QueryResponse_Group::QueryResponse_Group(const QueryResponse_Group& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      person_list_(from.person_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  // @@protoc_insertion_point(copy_constructor:MideaPb.QueryResponse.Group)
}

void QueryResponse_Group::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

QueryResponse_Group::~QueryResponse_Group() {
  // @@protoc_insertion_point(destructor:MideaPb.QueryResponse.Group)
  SharedDtor();
}

void QueryResponse_Group::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryResponse_Group::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponse_Group::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponse_Group& QueryResponse_Group::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_QueryResponse_Group.base);
  return *internal_default_instance();
}


void QueryResponse_Group::Clear() {
// @@protoc_insertion_point(message_clear_start:MideaPb.QueryResponse.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  person_list_.Clear();
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QueryResponse_Group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MideaPb.QueryResponse.Group)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string group_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MideaPb.QueryResponse.Group.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MideaPb.QueryResponse.Person person_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_person_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MideaPb.QueryResponse.Group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MideaPb.QueryResponse.Group)
  return false;
#undef DO_
}

void QueryResponse_Group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MideaPb.QueryResponse.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_name = 1;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MideaPb.QueryResponse.Group.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_name(), output);
  }

  // repeated .MideaPb.QueryResponse.Person person_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->person_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->person_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MideaPb.QueryResponse.Group)
}

::google::protobuf::uint8* QueryResponse_Group::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MideaPb.QueryResponse.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_name = 1;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MideaPb.QueryResponse.Group.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_name(), target);
  }

  // repeated .MideaPb.QueryResponse.Person person_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->person_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->person_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MideaPb.QueryResponse.Group)
  return target;
}

size_t QueryResponse_Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MideaPb.QueryResponse.Group)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .MideaPb.QueryResponse.Person person_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->person_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->person_list(static_cast<int>(i)));
    }
  }

  // string group_name = 1;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponse_Group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MideaPb.QueryResponse.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponse_Group* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponse_Group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MideaPb.QueryResponse.Group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MideaPb.QueryResponse.Group)
    MergeFrom(*source);
  }
}

void QueryResponse_Group::MergeFrom(const QueryResponse_Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MideaPb.QueryResponse.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  person_list_.MergeFrom(from.person_list_);
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
}

void QueryResponse_Group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MideaPb.QueryResponse.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponse_Group::CopyFrom(const QueryResponse_Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MideaPb.QueryResponse.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponse_Group::IsInitialized() const {
  return true;
}

void QueryResponse_Group::Swap(QueryResponse_Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponse_Group::InternalSwap(QueryResponse_Group* other) {
  using std::swap;
  CastToBase(&person_list_)->InternalSwap(CastToBase(&other->person_list_));
  group_name_.Swap(&other->group_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponse_Group::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponse::kActFieldNumber;
const int QueryResponse::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponse::QueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_QueryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MideaPb.QueryResponse)
}
QueryResponse::QueryResponse(const QueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  act_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.act().size() > 0) {
    act_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.act_);
  }
  // @@protoc_insertion_point(copy_constructor:MideaPb.QueryResponse)
}

void QueryResponse::SharedCtor() {
  act_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

QueryResponse::~QueryResponse() {
  // @@protoc_insertion_point(destructor:MideaPb.QueryResponse)
  SharedDtor();
}

void QueryResponse::SharedDtor() {
  act_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponse::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponse& QueryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_QueryResponse.base);
  return *internal_default_instance();
}


void QueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MideaPb.QueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MideaPb.QueryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string act = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_act()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->act().data(), static_cast<int>(this->act().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MideaPb.QueryResponse.act"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MideaPb.QueryResponse.Group list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MideaPb.QueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MideaPb.QueryResponse)
  return false;
#undef DO_
}

void QueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MideaPb.QueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string act = 1;
  if (this->act().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->act().data(), static_cast<int>(this->act().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MideaPb.QueryResponse.act");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->act(), output);
  }

  // repeated .MideaPb.QueryResponse.Group list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MideaPb.QueryResponse)
}

::google::protobuf::uint8* QueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MideaPb.QueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string act = 1;
  if (this->act().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->act().data(), static_cast<int>(this->act().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MideaPb.QueryResponse.act");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->act(), target);
  }

  // repeated .MideaPb.QueryResponse.Group list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MideaPb.QueryResponse)
  return target;
}

size_t QueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MideaPb.QueryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .MideaPb.QueryResponse.Group list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  // string act = 1;
  if (this->act().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->act());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MideaPb.QueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MideaPb.QueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MideaPb.QueryResponse)
    MergeFrom(*source);
  }
}

void QueryResponse::MergeFrom(const QueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MideaPb.QueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.act().size() > 0) {

    act_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.act_);
  }
}

void QueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MideaPb.QueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponse::CopyFrom(const QueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MideaPb.QueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponse::IsInitialized() const {
  return true;
}

void QueryResponse::Swap(QueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponse::InternalSwap(QueryResponse* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  act_.Swap(&other->act_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponse::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectResult_ImgProperty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectResult_ImgProperty::kLuminanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectResult_ImgProperty::DetectResult_ImgProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_DetectResult_ImgProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MideaPb.DetectResult.ImgProperty)
}
DetectResult_ImgProperty::DetectResult_ImgProperty(const DetectResult_ImgProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  luminance_ = from.luminance_;
  // @@protoc_insertion_point(copy_constructor:MideaPb.DetectResult.ImgProperty)
}

void DetectResult_ImgProperty::SharedCtor() {
  luminance_ = 0;
}

DetectResult_ImgProperty::~DetectResult_ImgProperty() {
  // @@protoc_insertion_point(destructor:MideaPb.DetectResult.ImgProperty)
  SharedDtor();
}

void DetectResult_ImgProperty::SharedDtor() {
}

void DetectResult_ImgProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DetectResult_ImgProperty::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectResult_ImgProperty& DetectResult_ImgProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_DetectResult_ImgProperty.base);
  return *internal_default_instance();
}


void DetectResult_ImgProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:MideaPb.DetectResult.ImgProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  luminance_ = 0;
  _internal_metadata_.Clear();
}

bool DetectResult_ImgProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MideaPb.DetectResult.ImgProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double luminance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &luminance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MideaPb.DetectResult.ImgProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MideaPb.DetectResult.ImgProperty)
  return false;
#undef DO_
}

void DetectResult_ImgProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MideaPb.DetectResult.ImgProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double luminance = 1;
  if (this->luminance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->luminance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MideaPb.DetectResult.ImgProperty)
}

::google::protobuf::uint8* DetectResult_ImgProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MideaPb.DetectResult.ImgProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double luminance = 1;
  if (this->luminance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->luminance(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MideaPb.DetectResult.ImgProperty)
  return target;
}

size_t DetectResult_ImgProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MideaPb.DetectResult.ImgProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double luminance = 1;
  if (this->luminance() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetectResult_ImgProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MideaPb.DetectResult.ImgProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectResult_ImgProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectResult_ImgProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MideaPb.DetectResult.ImgProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MideaPb.DetectResult.ImgProperty)
    MergeFrom(*source);
  }
}

void DetectResult_ImgProperty::MergeFrom(const DetectResult_ImgProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MideaPb.DetectResult.ImgProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.luminance() != 0) {
    set_luminance(from.luminance());
  }
}

void DetectResult_ImgProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MideaPb.DetectResult.ImgProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectResult_ImgProperty::CopyFrom(const DetectResult_ImgProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MideaPb.DetectResult.ImgProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectResult_ImgProperty::IsInitialized() const {
  return true;
}

void DetectResult_ImgProperty::Swap(DetectResult_ImgProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectResult_ImgProperty::InternalSwap(DetectResult_ImgProperty* other) {
  using std::swap;
  swap(luminance_, other->luminance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DetectResult_ImgProperty::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectResult_FaceResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectResult_FaceResult::kPersonIdFieldNumber;
const int DetectResult_FaceResult::kLeftFieldNumber;
const int DetectResult_FaceResult::kTopFieldNumber;
const int DetectResult_FaceResult::kRightFieldNumber;
const int DetectResult_FaceResult::kBottomFieldNumber;
const int DetectResult_FaceResult::kTypeFieldNumber;
const int DetectResult_FaceResult::kConfidenceFieldNumber;
const int DetectResult_FaceResult::kLivenessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectResult_FaceResult::DetectResult_FaceResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_DetectResult_FaceResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MideaPb.DetectResult.FaceResult)
}
DetectResult_FaceResult::DetectResult_FaceResult(const DetectResult_FaceResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&person_id_, &from.person_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&liveness_) -
    reinterpret_cast<char*>(&person_id_)) + sizeof(liveness_));
  // @@protoc_insertion_point(copy_constructor:MideaPb.DetectResult.FaceResult)
}

void DetectResult_FaceResult::SharedCtor() {
  ::memset(&person_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&liveness_) -
      reinterpret_cast<char*>(&person_id_)) + sizeof(liveness_));
}

DetectResult_FaceResult::~DetectResult_FaceResult() {
  // @@protoc_insertion_point(destructor:MideaPb.DetectResult.FaceResult)
  SharedDtor();
}

void DetectResult_FaceResult::SharedDtor() {
}

void DetectResult_FaceResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DetectResult_FaceResult::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectResult_FaceResult& DetectResult_FaceResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_DetectResult_FaceResult.base);
  return *internal_default_instance();
}


void DetectResult_FaceResult::Clear() {
// @@protoc_insertion_point(message_clear_start:MideaPb.DetectResult.FaceResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&person_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&liveness_) -
      reinterpret_cast<char*>(&person_id_)) + sizeof(liveness_));
  _internal_metadata_.Clear();
}

bool DetectResult_FaceResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MideaPb.DetectResult.FaceResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 person_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &person_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 top = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 right = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bottom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double confidence = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double liveness = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &liveness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MideaPb.DetectResult.FaceResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MideaPb.DetectResult.FaceResult)
  return false;
#undef DO_
}

void DetectResult_FaceResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MideaPb.DetectResult.FaceResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 person_id = 1;
  if (this->person_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->person_id(), output);
  }

  // int32 left = 2;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left(), output);
  }

  // int32 top = 3;
  if (this->top() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->top(), output);
  }

  // int32 right = 4;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->right(), output);
  }

  // int32 bottom = 5;
  if (this->bottom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->bottom(), output);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }

  // double confidence = 7;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->confidence(), output);
  }

  // double liveness = 8;
  if (this->liveness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->liveness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MideaPb.DetectResult.FaceResult)
}

::google::protobuf::uint8* DetectResult_FaceResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MideaPb.DetectResult.FaceResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 person_id = 1;
  if (this->person_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->person_id(), target);
  }

  // int32 left = 2;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left(), target);
  }

  // int32 top = 3;
  if (this->top() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->top(), target);
  }

  // int32 right = 4;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->right(), target);
  }

  // int32 bottom = 5;
  if (this->bottom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->bottom(), target);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }

  // double confidence = 7;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->confidence(), target);
  }

  // double liveness = 8;
  if (this->liveness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->liveness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MideaPb.DetectResult.FaceResult)
  return target;
}

size_t DetectResult_FaceResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MideaPb.DetectResult.FaceResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 person_id = 1;
  if (this->person_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->person_id());
  }

  // int32 left = 2;
  if (this->left() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->left());
  }

  // int32 top = 3;
  if (this->top() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->top());
  }

  // int32 right = 4;
  if (this->right() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->right());
  }

  // int32 bottom = 5;
  if (this->bottom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bottom());
  }

  // int32 type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // double confidence = 7;
  if (this->confidence() != 0) {
    total_size += 1 + 8;
  }

  // double liveness = 8;
  if (this->liveness() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetectResult_FaceResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MideaPb.DetectResult.FaceResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectResult_FaceResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectResult_FaceResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MideaPb.DetectResult.FaceResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MideaPb.DetectResult.FaceResult)
    MergeFrom(*source);
  }
}

void DetectResult_FaceResult::MergeFrom(const DetectResult_FaceResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MideaPb.DetectResult.FaceResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.person_id() != 0) {
    set_person_id(from.person_id());
  }
  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.top() != 0) {
    set_top(from.top());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
  if (from.bottom() != 0) {
    set_bottom(from.bottom());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.liveness() != 0) {
    set_liveness(from.liveness());
  }
}

void DetectResult_FaceResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MideaPb.DetectResult.FaceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectResult_FaceResult::CopyFrom(const DetectResult_FaceResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MideaPb.DetectResult.FaceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectResult_FaceResult::IsInitialized() const {
  return true;
}

void DetectResult_FaceResult::Swap(DetectResult_FaceResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectResult_FaceResult::InternalSwap(DetectResult_FaceResult* other) {
  using std::swap;
  swap(person_id_, other->person_id_);
  swap(left_, other->left_);
  swap(top_, other->top_);
  swap(right_, other->right_);
  swap(bottom_, other->bottom_);
  swap(type_, other->type_);
  swap(confidence_, other->confidence_);
  swap(liveness_, other->liveness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DetectResult_FaceResult::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectResult::InitAsDefaultInstance() {
  ::MideaPb::_DetectResult_default_instance_._instance.get_mutable()->img_property_ = const_cast< ::MideaPb::DetectResult_ImgProperty*>(
      ::MideaPb::DetectResult_ImgProperty::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectResult::kImgPropertyFieldNumber;
const int DetectResult::kFaceResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectResult::DetectResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_DetectResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MideaPb.DetectResult)
}
DetectResult::DetectResult(const DetectResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      face_result_(from.face_result_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_img_property()) {
    img_property_ = new ::MideaPb::DetectResult_ImgProperty(*from.img_property_);
  } else {
    img_property_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MideaPb.DetectResult)
}

void DetectResult::SharedCtor() {
  img_property_ = NULL;
}

DetectResult::~DetectResult() {
  // @@protoc_insertion_point(destructor:MideaPb.DetectResult)
  SharedDtor();
}

void DetectResult::SharedDtor() {
  if (this != internal_default_instance()) delete img_property_;
}

void DetectResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DetectResult::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectResult& DetectResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_DetectResult.base);
  return *internal_default_instance();
}


void DetectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:MideaPb.DetectResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  face_result_.Clear();
  if (GetArenaNoVirtual() == NULL && img_property_ != NULL) {
    delete img_property_;
  }
  img_property_ = NULL;
  _internal_metadata_.Clear();
}

bool DetectResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MideaPb.DetectResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MideaPb.DetectResult.ImgProperty img_property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_img_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MideaPb.DetectResult.FaceResult face_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_face_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MideaPb.DetectResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MideaPb.DetectResult)
  return false;
#undef DO_
}

void DetectResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MideaPb.DetectResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MideaPb.DetectResult.ImgProperty img_property = 1;
  if (this->has_img_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_img_property(), output);
  }

  // repeated .MideaPb.DetectResult.FaceResult face_result = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->face_result_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->face_result(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MideaPb.DetectResult)
}

::google::protobuf::uint8* DetectResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MideaPb.DetectResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MideaPb.DetectResult.ImgProperty img_property = 1;
  if (this->has_img_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_img_property(), deterministic, target);
  }

  // repeated .MideaPb.DetectResult.FaceResult face_result = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->face_result_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->face_result(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MideaPb.DetectResult)
  return target;
}

size_t DetectResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MideaPb.DetectResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .MideaPb.DetectResult.FaceResult face_result = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->face_result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->face_result(static_cast<int>(i)));
    }
  }

  // .MideaPb.DetectResult.ImgProperty img_property = 1;
  if (this->has_img_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *img_property_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetectResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MideaPb.DetectResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MideaPb.DetectResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MideaPb.DetectResult)
    MergeFrom(*source);
  }
}

void DetectResult::MergeFrom(const DetectResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MideaPb.DetectResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  face_result_.MergeFrom(from.face_result_);
  if (from.has_img_property()) {
    mutable_img_property()->::MideaPb::DetectResult_ImgProperty::MergeFrom(from.img_property());
  }
}

void DetectResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MideaPb.DetectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectResult::CopyFrom(const DetectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MideaPb.DetectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectResult::IsInitialized() const {
  return true;
}

void DetectResult::Swap(DetectResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectResult::InternalSwap(DetectResult* other) {
  using std::swap;
  CastToBase(&face_result_)->InternalSwap(CastToBase(&other->face_result_));
  swap(img_property_, other->img_property_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DetectResult::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace MideaPb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MideaPb::FaceList* Arena::CreateMaybeMessage< ::MideaPb::FaceList >(Arena* arena) {
  return Arena::CreateInternal< ::MideaPb::FaceList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MideaPb::QueryResponse_Image* Arena::CreateMaybeMessage< ::MideaPb::QueryResponse_Image >(Arena* arena) {
  return Arena::CreateInternal< ::MideaPb::QueryResponse_Image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MideaPb::QueryResponse_Person* Arena::CreateMaybeMessage< ::MideaPb::QueryResponse_Person >(Arena* arena) {
  return Arena::CreateInternal< ::MideaPb::QueryResponse_Person >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MideaPb::QueryResponse_Group* Arena::CreateMaybeMessage< ::MideaPb::QueryResponse_Group >(Arena* arena) {
  return Arena::CreateInternal< ::MideaPb::QueryResponse_Group >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MideaPb::QueryResponse* Arena::CreateMaybeMessage< ::MideaPb::QueryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::MideaPb::QueryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MideaPb::DetectResult_ImgProperty* Arena::CreateMaybeMessage< ::MideaPb::DetectResult_ImgProperty >(Arena* arena) {
  return Arena::CreateInternal< ::MideaPb::DetectResult_ImgProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MideaPb::DetectResult_FaceResult* Arena::CreateMaybeMessage< ::MideaPb::DetectResult_FaceResult >(Arena* arena) {
  return Arena::CreateInternal< ::MideaPb::DetectResult_FaceResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MideaPb::DetectResult* Arena::CreateMaybeMessage< ::MideaPb::DetectResult >(Arena* arena) {
  return Arena::CreateInternal< ::MideaPb::DetectResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
